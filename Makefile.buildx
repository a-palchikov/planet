MKFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
CURRENT_DIR := $(realpath $(patsubst %/,%,$(dir $(MKFILE_PATH))))
CONTAINER_BUILD_DIR := _build
BUILD_DIR ?= $(CURRENT_DIR)/$(CONTAINER_BUILD_DIR)
DOCKER ?= docker

.PHONY: all binaries tarball rootfs-shell clean
all: tarball

binaries: | $(BUILD_DIR)
	TARGET=binary-releaser OUTPUT_DIR=$(BUILD_DIR) hack/build

tarball: $(BUILD_DIR)/pause.tar.gz $(BUILD_DIR)/nettest.tar.gz | $(BUILD_DIR)
	TARGET=releaser OUTPUT_DIR=$(BUILD_DIR) CONTAINER_BUILD_DIR=$(CONTAINER_BUILD_DIR) hack/build

rootfs-shell:
	TARGET=rootfs OUTPUT_FORMAT="type=image,name=planet-rootfs:v1" hack/build
	$(DOCKER) run --rm -ti planet-rootfs:v1 bash

$(BUILD_DIR)/pause.tar.gz: image=gcr.io/google_containers/pause:3.2
$(BUILD_DIR)/pause.tar.gz: | $(BUILD_DIR)
	$(DOCKER) pull $(image)
	$(DOCKER) save -o $@ $(image)

$(BUILD_DIR)/nettest.tar.gz: image=gcr.io/google_containers/nettest:1.8
$(BUILD_DIR)/nettest.tar.gz: | $(BUILD_DIR)
	$(DOCKER) pull $(image)
	$(DOCKER) save -o $@ $(image)

$(BUILD_DIR):
	mkdir -p $@

clean:
	rm -r $(BUILD_DIR) || true
	$(DOCKER) rmi --force planet-rootfs:v1
